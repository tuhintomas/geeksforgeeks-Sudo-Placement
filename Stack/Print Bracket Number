Given an expression exp of length n consisting of some brackets. The task is to print the bracket numbers when the expression is
being parsed.

Input:
The first line contains an integer T, the number of test cases. For each test case, there is a string exp containing the expression.

Output:
For each test case, the output is the bracket numbers of the expression.

Constraints:
1<=T<=100
1<=S<=100

Example:
Input:
3​
(a+(b*c))+(d/e)​
((())(()))
((((()
Output:
1 2 2 1 3 3
1 2 3 3 2 4 5 5 4 1
1 2 3 4 5 5

Explanation:
Test case 1:The highlighted brackets in the given expression (a+(b*c))+(d/e) has been assigned the numbers as: 1 2 2 1 3 3.





def bracket_number(exp):
    stack=[]
    index=0
    for i in range(len(exp)):
        if exp[i]=='(':
            index+=1
            print(index,end=' ')
            stack.append(index)
        elif exp[i]==')':
            print(stack.pop(),end=" ")
            
        else:
            continue
    print()
t=int(input())
for i in range(t):
    s=input()
    bracket_number(s)
            
