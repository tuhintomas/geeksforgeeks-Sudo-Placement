Given a number N, calculate the prime numbers upto N using Sieve of Eratosthenes.  

Input: 
The first line of the input contains T denoting the number of testcases. T testcases follow. Each testcase contains one
line of input containing N.

Output: 
For all testcases, in a new line, print all the prime numbers upto or equal to N.

Constraints:
1 <= T<= 100
1 <= N <= 104

Example:
Input:
2
10
35
Output:
2 3 5 7
2 3 5 7 11 13 17 19 23 29 31 




def primesUpto(N):
    primes=[True]*(N+1)
    primes[0],primes[1]=False,False
    p=2
    while p*p<=N:
        if primes[p]==True:
            for i in range(2*p,N+1,p):
                primes[i]=False
        p+=1
    for i in range(1,N+1):
        if primes[i]==True:
            print(i,end=" ")
    print()
t=int(input())
for i in range(t):
    n=int(input())
    primesUpto(n)
